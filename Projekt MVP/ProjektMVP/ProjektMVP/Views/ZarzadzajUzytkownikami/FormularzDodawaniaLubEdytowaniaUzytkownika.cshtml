@model ProjektMVP.DTO.UzytkownikDTO

@{
    ViewBag.Title = "Dodaj/edytuj użytkownika";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dodaj/edytuj użytkownika</h2>

@if (ViewBag.Message != null)
{
    <div style="color:red">@ViewBag.Message</div>
}

@using (Html.BeginForm("DodajLubEdytujUzytkownikActionResult", "ZarzadzajUzytkownikami", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Imie, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Id)
                @Html.EditorFor(model => model.Imie, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Imie, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nazwisko, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nazwisko, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nazwisko, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HotelId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HotelId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PermissionsId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PermissionsId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PermissionsId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Karta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Karta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Karta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model?.Id != null)
                {
                    <input type="submit" value="Edytuj" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" value="Dodaj" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}
